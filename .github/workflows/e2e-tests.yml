name: ADEKA-COA Schedule Test
on:
  # schedule:
    
  #   - cron: '0 8 * * *'

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      # 테스트 실행. continue-on-error: true는 테스트가 실패해도 다음 단계를 계속 진행하게 합니다.
      - name: Run Playwright tests
        id: playwright_test
        continue-on-error: true
        env:
          ADEKA_ID: ${{ secrets.ADEKA_ID }}
          ADEKA_PASSWORD: ${{ secrets.ADEKA_PASSWORD }}
          BASE_URL: 'https://spc.adkk.co.kr:8091'
          CI: true
        # 중요: 테스트 결과 요약(summary.json)을 생성하도록 playwright.config.ts에 설정이 필요할 수 있습니다.
        run: npx playwright test

      # [수정됨] 별도의 스크립트 파일을 실행하여 결과 요약 및 이슈 본문 생성
      - name: Summarize results and create issue body
        id: summarize
        if: always() # 테스트 성공/실패 여부와 관계없이 항상 실행
        run: node scripts/generate-issue-body.js

      # [기존과 동일] 테스트 실패 시 GitHub 이슈 생성
      - name: Create GitHub Issue on Failure
        if: steps.playwright_test.outcome == 'failure'
        uses: peter-evans/create-issue-from-file@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "🚨 [자동화 테스트 실패] COA 검증 오류 발생 (${{ github.run_number }})"
          content-filepath: ./issue-body.md
          labels: |
            bug
            automated-test

      # [기존과 동일] 아티팩트 업로드
      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-and-failures
          path: |
            playwright-report/
            test-results/
            issue-body.md
          retention-days: 7

      # [기존과 동일] 테스트 최종 상태 확인
      - name: Check test status
        if: steps.playwright_test.outcome == 'failure'
        run: exit 1 # 테스트 단계가 실패했다면 워크플로우 전체를 실패 처리
