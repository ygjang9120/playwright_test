name: ADEKA-COA Schedule Test
on:
  workflow_dispatch:
    inputs:
      grep:
        description: 'Playwright ADEKA COA 테스트'
        required: false
        default: ''
  # schedule:
  #   - cron: '0 8 * * *'

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      # 테스트 실행. 이제 이 단계 안에서 텔레그램 알림이 자동으로 전송됩니다.
      - name: Run Playwright tests
        id: playwright_test
        continue-on-error: true
        env:
          ADEKA_ID: ${{ secrets.ADEKA_ID }}
          ADEKA_PASSWORD: ${{ secrets.ADEKA_PASSWORD }}
          BASE_URL: 'https://spc.adkk.co.kr:8091'
          # ✨ 텔레그램 시크릿을 테스트 코드로 전달하는 것이 핵심입니다.
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_THREAD_ID: ${{ secrets.TELEGRAM_THREAD_ID }}
          CI: true
        run: npx playwright test

      # (이슈 본문 생성 스크립트는 필요시 그대로 사용)
      - name: Summarize results and create issue body
        id: summarize
        if: always()
        run: node scripts/generate-issue-body.js

      # ▼▼▼ 아래 2개의 텔레그램 알림 블록은 삭제되었습니다 ▼▼▼
      # - name: Notify Telegram - Success ... (삭제)
      # - name: Notify Telegram - Failure ... (삭제)

      # 테스트 전체 실행 중 하나라도 실패하면 GitHub 이슈를 생성하는 것은 유용하므로 유지합니다.
      - name: Create GitHub Issue on Failure
        if: steps.playwright_test.outcome == 'failure'
        uses: peter-evans/create-issue-from-file@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "🚨 [자동화 테스트 실패] COA 검증 오류 발생 (${{ github.run_number }})"
          content-filepath: ./issue-body.md
          labels: |
            bug
            automated-test
      
      # 테스트 리포트와 결과물은 항상 업로드합니다.
      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-and-failures
          path: |
            playwright-report/
            test-results/
            issue-body.md
            downloads/ 
          retention-days: 7

      # 테스트 단계가 전체적으로 실패했다면 워크플로우도 실패로 처리합니다.
      - name: Check test status
        if: steps.playwright_test.outcome == 'failure'
        run: exit 1